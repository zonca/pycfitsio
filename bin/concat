#!/usr/bin/python

import exceptions
from optparse import OptionParser
import pycfitsio
import numpy as np

parser = OptionParser()
parser.add_option("-f", "--file", dest="filename",
                  help="write concatenated to FILE", metavar="FILE")
parser.add_option("-q", "--quiet",
                  action="store_false", dest="verbose", default=True,
                  help="don't print status messages to stdout")

(options, args) = parser.parse_args()

#class A:
#    pass
#
#options = A()
#options.filename = 'out.fits'
#options.verbose = True
#args = ['101003_ext.fits','101015_ext.fits']

with pycfitsio.open(args[0]) as f:
    print(args[0])
    hdu_names = f.HDUs.keys()
    print("Extensions:")
    print(hdu_names)
    all = f.read_all()

for filename in args[1:]:
    if options.verbose:
        print(filename)
    with pycfitsio.open(filename) as f:
        for name, data in f.read_all().iteritems():
            if all.haskey(name): 
                    for colname, coldata in data.iteritems():
                        try:
                            all[name][colname] = np.concatenate([all[name][colname], data[colname]])
                        except exceptions.TypeError:
                            if options.verbose:
                                print('SKIPPING: ' + filename)
                        #except exceptions.ValueError:
                        #    if options.verbose:
                        #        print('SKIPPING %s in %s' % (colname, filename))
            else:
                print("Found new extension %s" % name)
                all[name] = data

f2 = pycfitsio.create(options.filename)
for name, ext in all.iteritems(): 
    if options.verbose:
        print(name)
    f2.write_HDU(name, ext)
f2.close()
